<%- include("templates/header", {cssPage: ""}) %>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <div class="bg-style">
    <h1 class="p-3">Progress Tracking<br><br></h1>
    <div class="wrapper">
      <div class="row pt-5 pb-5">
        <div class="col-6 col-sm-3">
          <div class="counter" data-cp-percentage="75" data-cp-color="#00bfeb">
          </div>
          <h4>Learning Plans Completed</h4>
      
        </div>
        <br>

        <div class="col-6 col-sm-3">
          <div class="counter" data-cp-percentage="65" data-cp-color="#EA4C89"></div>
          <h4>Tutoring Completed</h4>
 
        </div>

        <br>
        <div class="col-6 col-sm-3">
          <div class="counter" data-cp-percentage="35" data-cp-color="#FF675B"></div>
          
          <h4>Resources Accessed</h4>
   
        </div>
      </div>
    </div>
    <button class="btn-update" style = "display: none;"></button>
  </div>
  
    



  <style>
    html{
      background-color: black;
    }
    div{

      color:white;

    }
h1 {
  background: rgba(0, 0, 0, 0.8);
  box-shadow:0px 1px 10px 2px rgba(0,0,0,0.2);
  border-bottom: 3px solid #ffffff;
  font-size: calc(1em + 1vmax);
  height:2.3em;
}
.col-6 {
  border: #fff 1px solid;
  padding: 1em;
}
.counter {
  display: inline-flex;
  cursor:pointer;
  width:300px;
  height:300px;
  max-width:100%;
  position:relative;
  justify-content:center;
  align-items:center;
  font-size: calc(1em + 1vmin);
  transition: height .2s ease-in-out;
  background: #fff;
  border-radius:50%;
  box-shadow:0px 1px 10px 2px rgba(0,0,0,0.2);
  margin:1em 0;
}

.percentage {
  color:black;
  position:absolute;
  text-align:center;
  top:50%;
  left:0;
  right:0;
  vertical-align:middle;
  transform:translate3d(0,-50%,0);
}

canvas {
  position:absolute;
  top:0;
  left:0;
}

input {
    width: 200px;
}
@import url('https://fonts.googleapis.com/css?family=Open+Sans');
body {
  font-family: 'Open Sans', sans-serif;
  text-align:center;
}
.bg-style {
  
  padding:2em;
  background-image:url('https://images.pexels.com/videos/3045163/free-video-3045163.jpg?auto=compress&cs=tinysrgb&dpr=1&w=500');
}


  </style>




  <script>
document.addEventListener("DOMContentLoaded", function() {

var circleProgress = (function(selector) {
  var wrapper = document.querySelectorAll(selector);
  Array.prototype.forEach.call(wrapper, function(wrapper, i) {
    var wrapperWidth,
      wrapperHeight,
      percent,
      innerHTML,
      context,
      lineWidth,
      centerX,
      centerY,
      radius,
      newPercent,
      speed,
      from,
      to,
      duration,
      start,
      strokeStyle,
      text;

    var getValues = function() {
      wrapperWidth = parseInt(window.getComputedStyle(wrapper).width);
      wrapperHeight = wrapperWidth;
      percent = wrapper.getAttribute('data-cp-percentage');
      innerHTML = '<span class="percentage"><strong>' + percent + '</strong> %</span><canvas class="circleProgressCanvas" width="' + (wrapperWidth * 2) + '" height="' + wrapperHeight * 2 + '"></canvas>';
      wrapper.innerHTML = innerHTML;
      text = wrapper.querySelector(".percentage");
      canvas = wrapper.querySelector(".circleProgressCanvas");
      wrapper.style.height = canvas.style.width = canvas.style.height = wrapperWidth + "px";
      context = canvas.getContext('2d');
      centerX = canvas.width / 2;
      centerY = canvas.height / 2;
      newPercent = 0;
      speed = 1;
      from = 0;
      to = percent;
      duration = 1000;
      lineWidth = 25;
      radius = canvas.width / 2 - lineWidth;
      strokeStyle = wrapper.getAttribute('data-cp-color');
      start = new Date().getTime();
    };

    function animate() {
      requestAnimationFrame(animate);
      var time = new Date().getTime() - start;
      if (time <= duration) {
        var x = easeInOutQuart(time, from, to - from, duration);
        newPercent = x;
        text.innerHTML = Math.round(newPercent) + " %";
        drawArc();
      }
    }

    function drawArc() {
      var circleStart = 1.5 * Math.PI;
      var circleEnd = circleStart + (newPercent / 50) * Math.PI;
      context.clearRect(0, 0, canvas.width, canvas.height);
      context.beginPath();
      context.arc(centerX, centerY, radius, circleStart, 4 * Math.PI, false);
      context.lineWidth = lineWidth;
      context.strokeStyle = "#ddd";
      context.stroke();
      context.beginPath();
      context.arc(centerX, centerY, radius, circleStart, circleEnd, false);
      context.lineWidth = lineWidth;
      context.strokeStyle = strokeStyle;
      context.stroke();

    }
    var update = function() {
      getValues();
      animate();
    }
    update();

    var btnUpdate = document.querySelectorAll(".btn-update")[0];
    btnUpdate.addEventListener("click", function() {
      wrapper.setAttribute("data-cp-percentage", Math.round(getRandom(5, 95)));
      update();
    });
    wrapper.addEventListener("click", function() {
      update();
    });

    var resizeTimer;
    window.addEventListener("resize", function() {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(function() {
        clearTimeout(resizeTimer);
        start = new Date().getTime();
        update();
      }, 250);
    });
  });

  //
  // http://easings.net/#easeInOutQuart
  //  t: current time
  //  b: beginning value
  //  c: change in value
  //  d: duration
  //
  function easeInOutQuart(t, b, c, d) {
    if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;
    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
  }

});

circleProgress('.counter');

// Gibt eine Zufallszahl zwischen min (inklusive) und max (exklusive) zurÃ¼ck
function getRandom(min, max) {
  return Math.random() * (max - min) + min;
}
});
  </script>

